#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 12 15:43:21 2022

@author: joseph
"""

x=0
import pandas

import os
cilialist=[]
location="/Users/joseph/Desktop/RNA seq data cortex"
os.chdir(location)
data=[]
scgs=pandas.read_excel("/Users/joseph/Desktop/RNA seq data cortex/scgs.v1.xlsx")
cilialist1=scgs["Gene Name"].tolist()
cilialist=['ADCY3 ', 'AHI1 ', 'AK7 ', 'AK8 ', 'ALMS1 ', 'ARF4 ', 'ARL13B ', 'ARL3 ', 'ARL6 ', 'ASAP1 ', 'ATXN10 ', 'AZI1 ', 'B9D1 ', 'B9D2 ', 'BBS1 ', 'BBS10 ', 'BBS12 ', 'BBS2 ', 'BBS4 ', 'BBS5 ', 'BBS7 ', 'BBS9 ', 'C21orf2 ', 'C2CD3 ', 'C2orf71 ', 'C8orf37 ', 'CBY1 ', 'CC2D2A ', 'CCDC103 ', 'CCDC114 ', 'CCDC164 ', 'CCDC28B ', 'CCDC37 ', 'CCDC39 ', 'CCDC40 ', 'CCDC41 ', 'CDH23 ', 'CENPJ ', 'CEP104 ', 'CEP135 ', 'CEP164 ', 'CEP250 ', 'CEP290 ', 'CEP41 ', 'CEP72 ', 'CEP89 ', 'CEP97 ', 'CLDN2 ', 'CLUAP1 ', 'CNGA2 ', 'CNGA4 ', 'CNGB1 ', 'CP110 ', 'CRB3 ', 'CROCC ', 'CTNNB1 ', 'DCDC2 ', 'DCDC2 ', 'DFNB31 ', 'DISC1 ', 'DNAAF1 ', 'DNAAF2 ', 'DNAAF3 ', 'DNAH1 ', 'DNAH10 ', 'DNAH11 ', 'DNAH2 ', 'DNAH5 ', 'DNAH6 ', 'DNAI1 ', 'DNAI2 ', 'DNAL1 ', 'DNALI1 ', 'DPCD ', 'DPYSL2 ', 'DRD1 ', 'DRD2 ', 'DRD5 ', 'DVL1 ', 'DYNC2H1 ', 'DYNLT1 ', 'DYX1C1 ', 'EFHC1 ', 'EVC ', 'EVC2 ', 'EXOC3 ', 'EXOC4 ', 'EXOC5 ', 'EXOC6 ', 'EXOC6B ', 'FAM161A ', 'FBF1 ', 'FLNA ', 'FOPNL ', 'FOXJ1 ', 'FUZ ', 'GAS8 ', 'GLI1 ', 'GLI2 ', 'GLI3 ', 'GLIS2 ', 'GPR161 ', 'GPR98 ', 'GSK3B ', 'HAP1 ', 'HEATR2 ', 'HNF1B ', 'HSPA8 ', 'HSPB11 ', 'HTR6 ', 'HTT ', 'HYDIN ', 'HYLS1 ', 'IFT122 ', 'IFT140 ', 'IFT172 ', 'IFT20 ', 'IFT27 ', 'IFT43 ', 'IFT46 ', 'IFT52 ', 'IFT57 ', 'IFT74 ', 'IFT80 ', 'IFT81 ', 'IFT88 ', 'INPP5E ', 'INTU ', 'INVS ', 'IQCB1 ', 'KIF17 ', 'KIF19 ', 'KIF24 ', 'KIF27 ', 'KIF3A ', 'KIF3B ', 'KIF3C ', 'KIF7 ', 'LCA5 ', 'LRRC6 ', 'LZTFL1 ', 'MAK ', 'MAL ', 'MAPRE1 ', 'MCHR1 ', 'MDM1 ', 'MKKS ', 'MKS1 ', 'MLF1 ', 'MNS1 ', 'MYO15A ', 'MYO7A ', 'NEK1 ', 'NEK2 ', 'NEK4 ', 'NEK8 ', 'NGFR ', 'NIN ', 'NINL ', 'NME5 ', 'NME7 ', 'NME8 ', 'NOTO ', 'NPHP1 ', 'NPHP3 ', 'NPHP4 ', 'NUP214 ', 'NUP35 ', 'NUP37 ', 'NUP62 ', 'NUP93 ', 'OCRL ', 'ODF2 ', 'OFD1 ', 'ORC1 ', 'PACRG ', 'PAFAH1B1 ', 'PARD3 ', 'PARD6A ', 'PCDH15 ', 'PCM1 ', 'PDE6D ', 'PDZD7 ', 'PHF17 ', 'PIBF1 ', 'PKD1 ', 'PKD1L1 ', 'PKD2 ', 'PKHD1 ', 'PLK1 ', 'POC1A ', 'PTCH1 ', 'PTPDC1 ', 'RAB11A ', 'RAB11FIP3 ', 'RAB17 ', 'RAB23 ', 'RAB3IP ', 'RAB8A ', 'RABL5 ', 'RAN ', 'RANBP1 ', 'RFX3 ', 'RILPL1 ', 'RILPL2 ', 'ROPN1L ', 'RP1 ', 'RP2 ', 'RPGR ', 'RPGRIP1 ', 'RPGRIP1L ', 'RSPH1 ', 'RSPH3 ', 'RSPH4A ', 'RSPH9 ', 'RTTN ', 'SASS6 ', 'SCLT1 ', 'SDCCAG8 ', 'SEPT2 ', 'SEPT7 ', 'SGK196 ', 'SHH ', 'SLC47A2 ', 'SMO ', 'SNAP25 ', 'SNX10 ', 'SPA17 ', 'SPAG16 ', 'SPAG17 ', 'SPAG6 ', 'SPATA7 ', 'SPEF2 ', 'SSNA1 ', 'SSTR3 ', 'STIL ', 'STK36 ', 'STK38L ', 'STOML3 ', 'STX3 ', 'SUFU ', 'SYNE2 ', 'TBC1D30 ', 'TBC1D7 ', 'TCTN1 ', 'TCTN2 ', 'TCTN3 ', 'TEKT2 ', 'TEKT4 ', 'TEKT5 ', 'TMEM138 ', 'TMEM216 ', 'TMEM231 ', 'TMEM237 ', 'TMEM67 ', 'TNPO1 ', 'TOPORS ', 'TPPP2 ', 'TRAF3IP1 ', 'TRAPPC10 ', 'TRAPPC3 ', 'TRAPPC9 ', 'TRIM32 ', 'TRIP11 ', 'TTBK2 ', 'TTC12 ', 'TTC21B ', 'TTC26 ', 'TTC29 ', 'TTC30A ', 'TTC30B ', 'TTC8 ', 'TTK ', 'TTLL3 ', 'TTLL6 ', 'TTLL9 ', 'TUBA1A ', 'TUBA1C ', 'TUBA4A ', 'TUBB2A ', 'TUBB2B ', 'TUBB3 ', 'TUBE1 ', 'TUBGCP2 ', 'TUBGCP3 ', 'TUBGCP4 ', 'TUBGCP5 ', 'TUBGCP6 ', 'TULP1 ', 'TULP3 ', 'ULK4 ', 'USH1C ', 'USH1G ', 'USH2A ', 'VDAC3 ', 'VHL ', 'WDPCP ', 'WDR19 ', 'WDR35 ', 'WDR60 ', 'WDR78 ', 'XPNPEP3 ', 'ZNF423 ']
interneuron=['PVALB ', 'RELN ', 'SST ','VIP ','NOS1 ', 'GAD65 ', 'GAD67 ', 'ChAT', 'GAD2 ','GAD1 ', 'GAD ','SCP ', 'CPSQ1 ', 'DEE89 ' ]
pyramidalS1=['ADCYAP1 ', 'ADRB1 ', 'ARPP19 ', 'ATP1A1 ', 'ATP2A2 ', 'ATP2B2 ', 'B4GALT2 ', 'CA10 ', 'CCKBR ', 'CNTNAP5 ', 'COL5A1 ', 'CPNE9 ', 'CYP26B1 ', 'DOC2A ', 'E2F1 ', 'ERC2 ', 'FBXL2 ', 'FSTL4 ', 'GFRA2 ', 'GPR88 ', 'GRM2 ', 'GRM8 ', 'GSG1L ', 'GTDC1 ', 'HTR1F ', 'HTR2A ', 'IGSF21 ', 'KCNH1 ', 'KCNH4 ', 'KCNH5 ', 'KCNH7 ', 'KCNJ11 ', 'KCNJ9 ', 'KCNS1 ', 'KCNT2 ', 'KLHL1 ', 'KRT222 ', 'LPCAT4 ', 'MAPK11 ', 'MGAT4C ', 'MYRIP ', 'NECAB3 ', 'NEGR1 ', 'NTSR1 ', 'NXPH3 ', 'OPN3 ', 'OPRK1 ', 'OSBP2 ', 'OVOL2 ', 'PACS1 ', 'PCDH7 ', 'PCP4 ', 'PCSK5 ', 'PFKP ', 'PTPRK ', 'RASGEF1C ', 'SCN4B ', 'SCUBE1 ', 'SDK2 ', 'SEMA5B ', 'SLC24A2 ', 'SOX5 ', 'SSTR2 ', 'ST3GAL5 ', 'STARD10 ', 'STAT4 ', 'STRBP ', 'STX1A ', 'TBR1 ', 'TIAM2 ', 'TMEM132A ', 'TPBG ', 'VOPP1 ']
astrocyte=['ACSL3 ', 'ACSL6 ', 'ADCY2 ', 'ADD3 ', 'AGPAT3 ', 'AGPAT5 ', 'AIFM2 ', 'ALDOC ', 'AMT ', 'ARHGEF10L ', 'B3GALTL ', 'CHRDL1 ', 'CRY2 ', 'CSPG5 ', 'CTNNBIP1 ', 'ELMO2 ', 'EPHX2 ', 'EYA1 ', 'FABP7 ', 'FAM107A ', 'FARP1 ', 'FBXO2 ', 'FREM2 ', 'GABRG1 ', 'GLI2 ', 'GLUD1 ', 'GPC6 ', 'HEPH ', 'HEY1 ', 'HSD11B1 ', 'LGI4 ', 'LRRC2 ', 'LSAMP ', 'LUZP2 ', 'LXN ', 'NCAN ', 'NTSR2 ', 'PRKD1 ', 'RANBP3L ', 'RELT ', 'RGS20 ', 'SDSL ', 'SESN3 ', 'SLC1A4 ', 'SLC30A10 ', 'SLC7A11 ', 'SNTA1 ', 'SRC ', 'SYCP2 ', 'THBS4 ', 'TM7SF2 ', 'TRPS1 ', 'UGP2 ', 'ZMPSTE24 ']
microglia=['ABCA9 ', 'ABCC3 ', 'ADCY7 ', 'ADRB2 ', 'APAF1 ', 'ARRB2 ', 'BCL2A1 ', 'CD53 ', 'CD86 ', 'CENPF ', 'CSF1R ', 'CTSZ ', 'CX3CR1 ', 'CYBB ', 'CYTH4 ', 'DENND1B ', 'EVI2B ', 'F13A1 ', 'GINS2 ', 'GPX3 ', 'IL1B ', 'KDM2B ', 'LCP1 ', 'LCP2 ', 'LY96 ', 'MAN1C1 ', 'MASP2 ', 'MCFD2 ', 'MYO1F ', 'NAGPA ', 'NCOA3 ', 'P2RY12 ', 'PACSIN2 ', 'PIK3CG ', 'PXN ','RAB43 ', 'SCPEP1 ', 'SKAP2 ', 'SLA ', 'SLC16A6 ', 'STAB1 ', 'SUSD1 ', 'SYK ', 'TAGAP ', 'TGFBI ', 'TLN2 ', 'TNFRSF11A ', 'VAV1 ']
#print(cilialist)
resultsIN=[]
resultsPY=[]
resultsAS=[]
resultsMG=[]
resultsfile=pandas.DataFrame()


for root, dirs, files in os.walk(location):
    for file in files:
        if file.endswith(".csv"):
            df=pandas.read_csv(file,delimiter="\t",header=None)
            #print(df)
            data=[]
            resultsPY=[]
            resultsIN=[]
            countPy=[]
            countIN=[]
            PyramidalGenes=pandas.DataFrame(columns=['Pyramidal genes','Count PY'])
            INGenes=pandas.DataFrame(columns=['IN genes','Count IN'])
            u=0
            
            totalrows=len(df)
            for number in range(totalrows):
                count=df.iloc[u,1]
                genename=df.iloc[u,0]
               
                
                #print(count)
                if count !=0:
                   
                        if genename in pyramidalS1:
                    
                                gene=df.iloc[u]
                                resultsPY.append(genename)
                                countPy.append(count)
                                
                                
                    
                        if genename in interneuron:
                                gene1=df.iloc[u]
                                resultsIN.append(genename)
                                countIN.append(count)
            
                u+=1
                
            PyramidalGenes['Pyramidal genes']=resultsPY
            PyramidalGenes['Count PY']=countPy
           
            INGenes['IN genes']=resultsIN
            INGenes['Count IN']=countIN
            lis=[PyramidalGenes, INGenes]
            resultsfile=pandas.concat(lis, axis=1)
            resultsfile.to_excel(file+'INvPY'+'.xlsx')
#print(data)      
